server.port=5000

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url= jdbc:postgresql://localhost:5432/person_testing
spring.datasource.username= postgres
spring.datasource.password= postgres

spring.data.elasticsearch.cluster-names=customersService
spring.data.elasticsearch.cluster-node=localhost:9200

# Konfigurasi JPA (Hibernate)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# Konfigurasi Consumer Servers
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: customer-group
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer


# Konfigurasi Producer Servers
spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringDeserializer

# Konfigurasi Redis
spring.redis.host=localhost
spring.redis.port=6379
spring.cache.redis.time-to-live=86400000
spring.cache.cache-name=customers
spring.cache.redis.key-prefix=ecommerce-